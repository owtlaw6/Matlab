>> A=[2 1 5; 4 4 -4; 1 3 1];
>> b=[9; -8; 4];
>> [A,x]=gauss(A,b)

A =

     2     1     5
     0     2   -14
     0     0    16


x =

    -1     1     2

>> A=[2 1 5; 4 4 -4; 1 3 1];
>> [L,U,P]=lu(A)

L =

    1.0000         0         0
    0.2500    1.0000         0
    0.5000   -0.5000    1.0000


U =

     4     4    -4
     0     2     2
     0     0     8


P =

     0     1     0
     0     0     1
     1     0     0

>> x=A\b

x =

    -1
     1
     2

>> [A,x]=gauss(A,b)

A =

     2     1     5
     0     2   -14
     0     0    16


x =

    -1     1     2

>> A=[3 1 -1; 2 4 1; -1 2 5];
>> b=[-4; 4; 13];
>> x0=zeros(3,1);
 >> b=[-4; 4; 13];
 |
Error: Unexpected MATLAB operator.
 
>> b=[-4; 4; 13];
>> x0=zeros(3,1);
>> x=jacobi(A,b,x0,10)

x =

   -0.9981
    0.9980
    2.0018

>> A==A'

ans =

     1     0     1
     0     1     0
     1     0     1

>> eig(A)>0

ans =

     1
     1
     1

>> A=[3 1 -1; 2 4 1; -1 2 5];
>> eig(A)>0

ans =

     1
     1
     1

>> A=[4 -2 2; -2 2 -4; 2 -4 11];
>> A==A'

ans =

     1     1     1
     1     1     1
     1     1     1

>> eig(A)>0

ans =

     1
     1
     1

>> chol(A)

ans =

     2    -1     1
     0     1    -3
     0     0     1

>> F=@(x) [x(2)-x(1)^3;x(1)^2+x(2)^2-1];
>> x=broyden2(F,[1;1],10)
Error: File: broyden2.m Line: 8 Column: 26
The input character is not valid in MATLAB statements or expressions.
 
>> x=broyden2(F,[1;1],10)

x =

    0.8260
    0.5636

>> x=fsolve(F,[1;1])

Equation solved.

fsolve completed because the vector of function values is near zero
as measured by the default value of the function tolerance, and
the problem appears regular as measured by the gradient.

<stopping criteria details>


x =

    0.8260
    0.5636

>> A1=[-5 1 -2; 1 -3 1; 2 1 -4];
>> b1=[6 -2 -7];
>> gauss(A,b)

ans =

     4    -2     2
     0     1    -3
     0     0     1

>> [A,x] = gauss(A1,b1)

A =

   -5.0000    1.0000   -2.0000
         0   -2.8000    0.6000
         0         0   -4.5000


x =

   -1.5397    0.5238    1.1111

>> A2=[3 1 2;6 3 4;3 1 5];
>> [L,U,P] = lu(A2)

L =

    1.0000         0         0
    0.5000    1.0000         0
    0.5000    1.0000    1.0000


U =

    6.0000    3.0000    4.0000
         0   -0.5000         0
         0         0    3.0000


P =

     0     1     0
     1     0     0
     0     0     1

>> A3=[3 -1 1; 1 -8 -2; 1 1 5];
>> b3=[-2 1 4];
>> jacobi(A3,b3,[0 0 0],10)
Error using  * 
Inner matrix dimensions must agree.

Error in jacobi (line 7)
x = inv(D)*(b-(L+U)*x);
 
>> jacobi(A3,b3,[0 0 0]',10)
Error using  - 
Matrix dimensions must agree.

Error in jacobi (line 7)
x = inv(D)*(b-(L+U)*x);
 
>> jacobi(A3,b3',[0 0 0],10)
Error using  * 
Inner matrix dimensions must agree.

Error in jacobi (line 7)
x = inv(D)*(b-(L+U)*x);
 
>> jacobi(A3,b3,x0,10)
Error using  - 
Matrix dimensions must agree.

Error in jacobi (line 7)
x = inv(D)*(b-(L+U)*x);
 
>> b3=[-2; 1; 4];
>> jacobi(A3,b3,x0,10)

ans =

   -1.2444
   -0.5711
    1.1629

>> A6=[4 -2 3;-2 2 -1;3 -1 5];
>> A6==A6'

ans =

     1     1     1
     1     1     1
     1     1     1

>> eig(A6)>0

ans =

     1
     1
     1

>> chol([1 1 1;1 2 2;1 2 3])

ans =

     1     1     1
     0     1     1
     0     0     1

>> gauss_seidel(A1,b1,x0,10)
Error using  - 
Matrix dimensions must agree.

Error in gauss_seidel (line 7)
    x = inv(D+L)*(b-U*x);
 
>> gauss_seidel(A1,b1',x0,10)

ans =

   -1.5397
    0.5238
    1.1111

>> sor(A1,b1,x0,1.2,10)
Error using  * 
Inner matrix dimensions must agree.

Error in sor (line 7)
    x = inv(D+L*omega)*((1-omega)*D*x-omega*U*x) + omega*inv(omega*L+D)*b;
 
>> sor(A1,b1',x0,1.2,10)

ans =

   -1.5439
    0.5245
    1.1077

>> gauss_seidel(A3,b3,x0,10)

ans =

   -1.2449
   -0.5714
    1.1633

>> A1\b1'

ans =

   -1.5397
    0.5238
    1.1111

>> sor(A3,b3,x0,1.2,10)

ans =

   -1.2449
   -0.5714
    1.1633

>> A3\b3

ans =

   -1.2449
   -0.5714
    1.1633

>> conjgrad(A6,[1;-2;4],x0,10)

ans =

   -2.1000
   -2.3000
    1.6000

>> A6\[1;-2;4]

ans =

   -2.1000
   -2.3000
    1.6000

>> F12=@(x) [x(2)^2+4*x(1)^2-4; 4*x(2)^2+x(1)^2-4];
>> broyden2(F12,[1 1],10)
Error using  - 
Matrix dimensions must agree.

Error in broyden2 (line 5)
x=x0-B*F(x0);
 
>> broyden2(F12,[1 1]',10)

ans =

    0.8944
    0.8944

>> broyden1(F12,[1 1]',10)

ans =

    0.8944
    0.8944

>> format long
>> broyden1(F12,[1 1]',10)

ans =

   0.894427190999916
   0.894427190999916

>> fsolve(F12,[1;1])

Equation solved.

fsolve completed because the vector of function values is near zero
as measured by the default value of the function tolerance, and
the problem appears regular as measured by the gradient.

<stopping criteria details>


ans =

   0.894427191166385
   0.894427191166385

>> newton(F12,@(x)[2*x(2) 8*x(1); 8*x(2) 2*x(1)],[1 1]',10)

ans =

   0.894427190999916
   0.894427190999916

>> 