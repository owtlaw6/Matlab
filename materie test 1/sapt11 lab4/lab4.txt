>> x0=[0 2 3];
>> y0=[1 2 4];
>> c=newtondd(x0,y0,3)

c =

    1.0000    0.5000    0.5000

>> x=0:0.01:4;
>> y=nested(2,c,x,x0);
>> plot(x0,y0,'o',x,y)
>> x=0:0.01:2*pi;
>> y=sin(x);
>> y1=sin1(x);
>> plot(x,y1,x,y)
>> x=0:0.01:2*pi;
>> y=sin(x);
>> y2=sin2(x);
>> plot(x,y2,x,y)
>> x=[0;1;2];
>> y=[3;-2;1];
>> coeff=splinecoeff(x,y)

coeff =

    -7     0     2
    -1     6    -2

>> coeff=splinecoeff(x,y)

coeff =

    -7     0     2
    -1     6    -2

>> splineplot(x,y,10)
>> x=[1;1;3;2];
>> y=[1;3;3;2];
>> coeff=beziercoeff(x,y)

coeff =

     1     0     6    -5
     1     6    -6     1

>> bezierplot(x,y)
Error: File: bezierplot.m Line: 4 Column: 45
The input character is not valid in MATLAB statements or expressions.
 
>> bezierplot(x,y)
>> newtondd([-2 0 1 3],[8 4 2 -2],4)

ans =

     8    -2     0     0

>> x02=[0.6 0.7 0.8 0.9 1];
>> y0=[1.433329 1.632316 1.896481 2.247908 2.718282];
>> y02=[1.433329 1.632316 1.896481 2.247908 2.718282];
>> c = newtondd(x02,y02,4)

c =

    1.4333    1.9899    3.2589    3.6807

>> c = newtondd(x02,y02,5)

c =

    1.4333    1.9899    3.2589    3.6807    4.0004

>> f= @(x)exp(x^2)

f = 

    @(x)exp(x^2)

>> e1=f(0.82)-nested(4,c,0.82,x0)
Attempted to access b(4); index out of bounds because numel(b)=3.

Error in nested (line 7)
y = y.*(x-b(i))+c(i);
 
>> e1=f(0.82)-nested(4,c,0.82,x0)
Attempted to access b(4); index out of bounds because numel(b)=3.

Error in nested (line 7)
y = y.*(x-b(i))+c(i);
 
>> x02=[0.6 0.7 0.8 0.9 1];
>> y02=[1.433329 1.632316 1.896481 2.247908 2.718282];
>> e1=f(0.82)-nested(4,c,0.82,x02)

e1 =

   2.3349e-05

>> e2=f(0.98)-nested(4,c,0.98,x02)

e2 =

  -1.0661e-04

>> x=0:0.01:2*pi;
>> y=cos(x);
>> y1=cos1(x);
>> plot(x,y1,x,y)
>> x=cebisev(0,pi/2,4)
Error in cebisev (line 2)
for i=1:k

Output argument "y" (and maybe others) not assigned during call to "cebisev".
 
>> x=cebisev(0,pi/2,4)

x =

    1.5110    1.0860    0.4848    0.0598

>> y=sin(x)

y =

    0.9982    0.8847    0.4661    0.0597

>> newtondd(x,y,4)

ans =

    0.9982    0.2669   -0.4186   -0.1143

>> x=cebisev(0,pi/2,11)

x =

  Columns 1 through 10

    1.5628    1.4998    1.3790    1.2100    1.0067    0.7854    0.5641    0.3608    0.1918    0.0710

  Column 11

    0.0080

>> y=cos(x)

y =

  Columns 1 through 10

    0.0080    0.0709    0.1907    0.3530    0.5347    0.7071    0.8451    0.9356    0.9817    0.9975

  Column 11

    1.0000

>> newtondd(x,y,11)

ans =

  Columns 1 through 10

    0.0080   -0.9991   -0.0450    0.1643    0.0098   -0.0078   -0.0006    0.0002    0.0000   -0.0000

  Column 11

   -0.0000

>> y=cos2(x)

y =

  Columns 1 through 10

    0.0080    0.0709    0.1907    0.3530    0.5347    0.7071    0.8451    0.9356    0.9817    0.9975

  Column 11

    1.0000

>> newtondd(x,y,11)

ans =

  Columns 1 through 10

    0.0080   -0.9991   -0.0450    0.1643    0.0098   -0.0078   -0.0006    0.0002    0.0000   -0.0000

  Column 11

   -0.0000

>> y=cos2(x)

y =

  Columns 1 through 10

    0.0080    0.0709    0.1907    0.3530    0.5347    0.7071    0.8451    0.9356    0.9817    0.9975

  Column 11

    1.0000

>> newtondd(x,y,11)

ans =

  Columns 1 through 10

    0.0080   -0.9991   -0.0450    0.1643    0.0098   -0.0078   -0.0006    0.0002    0.0000   -0.0000

  Column 11

   -0.0000

>> f=@(x)exp(x)

f = 

    @(x)exp(x)

>> x=cebisev(-1,1,6)

x =

    0.9659    0.7071    0.2588   -0.2588   -0.7071   -0.9659

>> c=newtondd(x,f,6)

c =

    2.7183  -18.0465   14.5320  -20.5528   33.3307 -199.0882

>> y=exp(x)

y =

    2.6272    2.0281    1.2954    0.7720    0.4931    0.3806

>> c=newtondd(x,y,6)

c =

    2.6272    2.3148    0.9621    0.2587    0.0521    0.0086

>> x0=-1:0.1:1

x0 =

  Columns 1 through 10

   -1.0000   -0.9000   -0.8000   -0.7000   -0.6000   -0.5000   -0.4000   -0.3000   -0.2000   -0.1000

  Columns 11 through 20

         0    0.1000    0.2000    0.3000    0.4000    0.5000    0.6000    0.7000    0.8000    0.9000

  Column 21

    1.0000

>> y0 = exp(x0)

y0 =

  Columns 1 through 10

    0.3679    0.4066    0.4493    0.4966    0.5488    0.6065    0.6703    0.7408    0.8187    0.9048

  Columns 11 through 20

    1.0000    1.1052    1.2214    1.3499    1.4918    1.6487    1.8221    2.0138    2.2255    2.4596

  Column 21

    2.7183

>> y1 = nested(5,c,x0,x)

y1 =

  Columns 1 through 10

    0.3678    0.4066    0.4494    0.4966    0.5488    0.6065    0.6703    0.7408    0.8187    0.9049

  Columns 11 through 20

    1.0000    1.1052    1.2214    1.3498    1.4918    1.6487    1.8221    2.0137    2.2256    2.4596

  Column 21

    2.7182

>> plot(x0,y0,x0,y1)
>> x=[-1 0 3 4 5]

x =

    -1     0     3     4     5

>> y=[3 5 1 1 1]

y =

     3     5     1     1     1

>> coeff = splinecoeff([-1 0 3 4 5], [3 5 1 1 1])

coeff =

    2.5629         0   -0.5629
    0.8742   -1.6887    0.3176
   -0.6824    1.1698   -0.4874
    0.1950   -0.2925    0.0975

>> splineplot(x,y,5)
>> x=[0, pi/8, 2*pi/8, 3*pi/8, pi/2]

x =

         0    0.3927    0.7854    1.1781    1.5708

>> y = cos(x)

y =

    1.0000    0.9239    0.7071    0.3827    0.0000

>> coeff = splinecoeff(x,y)

coeff =

   -0.1148         0   -0.5123
   -0.3519   -0.6036    0.2390
   -0.7153   -0.3219    0.1011
   -0.9214   -0.2029    0.1722

>> splineplot(x,y,5)
>> x = [1 1.5 2 2.5 3];
>> y = log(x)

y =

         0    0.4055    0.6931    0.9163    1.0986

>> splineplot(x,y,5)
>> splinecoeff(x,y)

ans =

    0.8663         0   -0.2213
    0.7003   -0.3320    0.1645
    0.4916   -0.0853   -0.0105
    0.3984   -0.1011    0.0674

>> x=[1 0 -2 -2]

x =

     1     0    -2    -2

>> y = [1 0 0 1]

y =

     1     0     0     1

>> beziercoeff(x,y)

ans =

     1    -3    -3     3
     1    -3     3     0

>> bezierplot(x,y)
>> hold on
>> bezierplot([0 0 0 0],[2 2 0 0])
>> bezierplot([0 1 1 0],[1 1 0 0])
>> bezierplot([0 1 1 0],[2 2 1 1])
>> 